package interview.company.epic;

import java.util.ArrayList;
import java.util.List;

/**
 * A String "aBIY" is said to be a well-ordered word as each of the letters are
 * in sequential manner regardless of case. So, "AbLe" is not a well-ordered
 * word.
 * 
 * You are an anti-hacker. you have a number of character sequences. Your task
 * is to generate all possible well-ordered word that can be generated by those
 * numbers of given character sequences.
 * 
 * Write a function where the number of letters in the string are passes as
 * parameter and all such well ordered strings are found.
 * 
 * @author yazhoucao
 * 
 */
public class WellOrderedString {

	public static void main(String[] args) {
		WellOrderedString o = new WellOrderedString();
		for (int i = 1; i < 4; i++)
			System.out.println(o.findWellOrderedString(i).toString());
	}

	/**
	 * Similar to combination of LeetCode
	 */
	public List<String> findWellOrderedString(int n) {
		List<String> res = new ArrayList<>();
		String alphabet = "abcdefghijklmnopqrstuvwxyz";
		StringBuilder sb = new StringBuilder();
		combination(sb, alphabet, 0, n, res);
		return res;
	}

	/**
	 * Time: Cnk, O(n!/k!(n-k)!), (factorial)
	 */
	public void combination(StringBuilder curr, String alphabet, int start,
			int n, List<String> res) {
		if (curr.length() == n) {
			res.add(curr.toString());
			return;
		}

		for (int i = start; i < alphabet.length(); i++) {
			curr.append(alphabet.charAt(i));
			combination(curr, alphabet, start + 1, n, res);
			curr.deleteCharAt(curr.length() - 1);
		}
	}
}
